version: "3.9"

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: airq
      POSTGRES_PASSWORD: airq
      POSTGRES_DB: airq
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - airq-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    depends_on:
      - db
    environment:
      AIRQ_HOST: ${AIRQ_HOST}
      AIRQ_PASSWORD: ${AIRQ_PASSWORD}
      AIRQ_SENSORS: ${AIRQ_SENSORS}
      DATABASE_URL: postgresql+asyncpg://airq:airq@db:5432/airq
      POLL_INTERVAL_SECONDS: 1.5
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - airq-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    networks:
      - airq-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - airq-network

volumes:
  db_data:
  prometheus_data:
  grafana_data:

networks:
  airq-network:
    driver: bridge